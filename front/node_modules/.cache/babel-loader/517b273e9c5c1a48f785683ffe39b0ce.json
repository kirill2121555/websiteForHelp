{"ast":null,"code":"var _jsxFileName = \"D:\\\\testtask\\\\front\\\\src\\\\components\\\\posthelper\\\\Post.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Comment from '../AuthComponent/Comment/Comment';\nimport { fetchOneDevice, getCommentss, postComment } from './../http/feth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Post = props => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [devise, setDevise] = useState([]);\n  const [comment, setComment] = useState();\n  const [comments, setComments] = useState(); //const [data, setData]=useState('0')\n\n  useEffect(() => {\n    fetchOneDevice(id).then(data => setDevise(data));\n    getCommentss(id).then(data => setComments(data));\n  }, []);\n\n  const addComment = async () => {\n    const data = new Date();\n    await postComment(id, comment, data);\n    window.location.reload();\n  };\n\n  console.log(comments);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"f\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          class: \"card-title\",\n          children: [devise.name, /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: devise.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 62\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          class: \"card-title\",\n          children: [\"\\u0412\\u0438\\u0434\\u044B \\u043F\\u043E\\u043C\\u043E\\u0449\\u0438: \", devise.listThings]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"clipp\",\n          children: devise.region\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\"Email: \", devise.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\"\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u0435: \", devise.phone, \" \", devise.nameBoss, \"  \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\"\\u0410\\u0434\\u0440\\u0435\\u0441: \", devise.city, \" \", devise.address, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      class: \"form-control\",\n      id: \"exampleFormControlInput1\",\n      value: comment,\n      onChange: e => setComment(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      class: \"btn btn-primary me-md-2\",\n      type: \"button\",\n      onClick: addComment,\n      children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: comments === null || comments === void 0 ? void 0 : comments.map(comment => /*#__PURE__*/_jsxDEV(Comment, {\n        comment: comment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 47\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 11\n  }, this);\n};\n\n_s(Post, \"GlhiTKPUjW3AueOBSMVfb464PPw=\", false, function () {\n  return [useParams];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Comment","fetchOneDevice","getCommentss","postComment","Post","props","id","devise","setDevise","comment","setComment","comments","setComments","then","data","addComment","Date","window","location","reload","console","log","name","description","listThings","region","email","phone","nameBoss","city","address","e","target","value","map"],"sources":["D:/testtask/front/src/components/posthelper/Post.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Comment from '../AuthComponent/Comment/Comment';\r\nimport { fetchOneDevice, getCommentss, postComment } from './../http/feth'\r\n\r\nconst Post = (props) => {\r\n     const { id } = useParams()\r\n     const [devise, setDevise] = useState([])\r\n     const [comment, setComment] = useState()\r\n     const [comments, setComments] = useState()\r\n\r\n     //const [data, setData]=useState('0')\r\n\r\n\r\n     useEffect(() => {\r\n          fetchOneDevice(id).then(data => setDevise(data))\r\n          getCommentss(id).then(data => setComments(data))\r\n     }, [])\r\n\r\n\r\n     const addComment = async () => {\r\n          const data = new Date()\r\n          await postComment(id, comment, data)\r\n          window.location.reload()\r\n     }\r\n    \r\n\r\n     console.log(comments)\r\n\r\n     return (\r\n          <div>\r\n               <div class=\"card\">\r\n                    <div className=\"f\">\r\n                         <h2 class=\"card-title\">{devise.name}<h6>{devise.description}</h6></h2>\r\n                         <h6 class=\"card-title\">Виды помощи: {devise.listThings}</h6>\r\n                         <p class=\"clipp\">{devise.region}</p>\r\n                         <p><small>Email: {devise.email}</small></p>\r\n                         <p><small>Телефое: {devise.phone} {devise.nameBoss}  </small></p>\r\n                         <p><small>Адрес: {devise.city} {devise.address} </small></p>\r\n\r\n                    </div>\r\n               </div>\r\n               <input type=\"email\" class=\"form-control\" id=\"exampleFormControlInput1\"\r\n                    value={comment}\r\n                    onChange={e => setComment(e.target.value)}\r\n               ></input>\r\n\r\n               <button class=\"btn btn-primary me-md-2\" type=\"button\" onClick={addComment}>Сохранить</button>\r\n\r\n\r\n               <ul>\r\n                    {comments?.map(comment => <Comment comment={comment} />)}\r\n               </ul>\r\n\r\n          </div>\r\n     );\r\n}\r\n\r\nexport default Post"],"mappings":"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"},"metadata":{},"sourceType":"module"}